name: Draft Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  draft:
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      # Download all assets from the nightly release
      - name: Download Development Release
        uses: robinraju/release-downloader@v1.9
        with:
          tag: nightly
          fileName: '*'
          tarBall: false
          zipBall: true
          out-file-path: 'dev'

      # Debugging: List downloaded files
      - name: Debug Downloaded Files
        run: ls -la dev/

      # Verify that all expected files are downloaded
      - name: Verify Files
        run: |
          if [ ! -f dev/geode-*-android32.zip ]; then
            echo "Error: Android 32-bit ZIP not found."
            exit 1
          fi
          if [ ! -f dev/geode-*-android64.zip ]; then
            echo "Error: Android 64-bit ZIP not found."
            exit 1
          fi
          if [ ! -f dev/resources.zip ]; then
            echo "Error: Resources ZIP not found."
            exit 1
          fi

      # Fetch the VERSION file from the main branch
      - name: Fetch VERSION from Main Branch
        id: ref
        run: |
          VERSION=$(curl -s https://raw.githubusercontent.com/Geode-Lite/geode/main/VERSION | xargs)
          if [ -z "$VERSION" ]; then
            echo "Error: Failed to fetch VERSION from the repository."
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Check if a release with this version already exists
          set +e
          curl --fail "https://api.github.com/repos/Geode-Lite/geode/releases/tags/v$VERSION" --silent --output /dev/null
          RESULT=$?
          set -e

          if [ $RESULT -eq 0 ]; then
            echo "Release v$VERSION already exists. Exiting."
            exit 1
          fi

      # Rename and move files to prepare for the release
      - name: Move and Rename Files
        run: |
          mv dev/geode-*-android32.zip geode-v${{ steps.ref.outputs.version }}-android32.zip
          mv dev/geode-*-android64.zip geode-v${{ steps.ref.outputs.version }}-android64.zip
          mv dev/resources.zip resources.zip

      # Debugging: List files after renaming
      - name: Debug Renamed Files
        run: ls -la .

      # Fetch the latest changelog entries
      - name: Fetch Latest Changelog Entries
        id: changelog
        run: |
          # Fetch the CHANGELOG.md file
          curl -s https://raw.githubusercontent.com/Geode-Lite/geode/main/CHANGELOG.md -o CHANGELOG.md

          # Extract the latest changelog entries
          LATEST_CHANGELOG=$(awk '/^## /{i++}i==2{exit}i==1' CHANGELOG.md)

          # Check if changelog entries were found
          if [ -z "$LATEST_CHANGELOG" ]; then
            echo "Error: Failed to extract latest changelog entries."
            exit 1
          fi

          # Output the changelog for use in subsequent steps
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$LATEST_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Create the draft release with the latest changelog
      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.ref.outputs.version }}
          name: Geode v${{ steps.ref.outputs.version }}
          body: |
            Geode development release for version ${{ steps.ref.outputs.version }}.

            ${{ env.changelog }}

          draft: true
          files: |
            ./geode-v${{ steps.ref.outputs.version }}-android32.zip
            ./geode-v${{ steps.ref.outputs.version }}-android64.zip
            ./resources.zip
